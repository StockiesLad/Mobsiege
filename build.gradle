plugins {
    id 'eclipse'
    id 'idea'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.spongepowered.mixin' version '0.7.+'
}

version = mod_version
group = mod_group_id

base {
    archivesName = mod_id
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {
    mappings channel: mapping_channel, version: mapping_version
    copyIdeResources = true
    runs {
        configureEach {
            //noinspection GroovyAssignabilityCheck
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    //noinspection GroovyAssignabilityCheck
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            //noinspection GroovyAssignabilityCheck
            workingDirectory project.file('run-data')
            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {dir 'libs'}

    maven {url "https://maven.su5ed.dev/releases/"}
    maven {url "https://cursemaven.com"}
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"
    annotationProcessor "org.spongepowered:mixin:${mixin_version}:processor"
    annotationProcessor "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"
    implementation "io.github.llamalad7:mixinextras-fabric:${mixin_extras_version}"

    compileOnly "dev.su5ed.sinytra.fabric-api:fabric-api:${fabric_api_version}"
    compileOnly "dev.su5ed.sinytra:fabric-loader:2.7.4+0.15.3+1.20.1"
    compileOnly "net.jmb19905:carbonize:1.0.0+1.20.1"
    implementation fg.deobf("curse.maven:actually-subtractions-1083685:6223947")
    implementation fg.deobf("buildcraft:buildcraft:7.99.24.9-1.20.1-2025-04-26-all")
    implementation fg.deobf("curse.maven:notreepunching-289043:4599926")
    implementation fg.deobf("curse.maven:tough-as-nails-246391:5815863")
    implementation fg.deobf("curse.maven:epic-mob-siege-nightmare-957414:5003615")
    implementation fg.deobf("curse.maven:new-thin-air-878379:5068247")
    implementation fg.deobf("curse.maven:puzzles-lib-495476:5904750")
    implementation fg.deobf("curse.maven:curios-309927:6058834")
    implementation fg.deobf("curse.maven:cb-multipart-258426:5311521")
}

mixin {
    add sourceSets.main, 'mobsiege.mixins.refmap.json'
    config 'mobsiege.mixins.json'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version,
            minecraft_version_range: minecraft_version_range,
            forge_version: forge_version,
            forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id,
            mod_name: mod_name,
            mod_license: mod_license,
            mod_version: mod_version,
            mod_authors: mod_authors,
            mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                'Specification-Title'     : mod_id,
                'Specification-Vendor'    : mod_authors,
                'Specification-Version'   : '1', // We are version 1 of ourselves
                'Implementation-Title'    : project.name,
                'Implementation-Version'  : project.jar.archiveVersion,
                'Implementation-Vendor'   : mod_authors,
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
